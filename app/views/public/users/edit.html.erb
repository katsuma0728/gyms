<div class = "container">
  <div class="row mt-5">
    <div class="col-md-6 offset-md-3">
      <%= render "public/shared/error_messages", resource: @user %>
      <%= form_with model: @user, url: user_path, method: :patch do |f| %>
        <div class = "mb-3">
          <div>現在のプロフィール画像</div>
          <%# byebug %>
          <%= image_tag @user.get_profile_image(200,200), class: "rounded-circle edit-img mt-2 mb-2" %>
          <div>↓より更新後の画像を選択</div>
          <%= f.file_field :profile_image, accept: "profile_image/*", class: "form-control-file" %>
          <div class = "pt-2" id="new-user-image"></div>
        </div>
        <div class="mb-3">
          <label>ユーザーネーム</label>
          <%= f.text_field :name, class: "form-control" %>
        </div>
        <div class = "mb-3">
          <label>生年月日</label>
          <%= f.date_select :birth_date, use_month_numbers: true, start_year: 1930, end_year: (Time.now.year - 10), default: Date.new(1989, 1, 1), class: "form-control" %>
        </div>
        <div class = "mb-3">
          <label>性別</label>
          <%= f.select :sex , User.sexes_i18n.keys.to_a, { include_blank: '選択してください'}, class: "form-control" %>
        </div>
        <div class = "mb-3">
          <label>目標</label>
          <%= f.text_area :introduction, class: "form-control" %>
        </div>
        <div class="mb-3">
          <label>メールアドレス</label>
          <%= f.email_field :email, class: "form-control" %>
        </div>
        <div>
          <%= f.submit "保存", class: "btn btn-success" %>
          <%= link_to "ログアウト", destroy_user_session_path, method: :delete, class: "btn btn-primary mx-2" %>
          <%= link_to "退会する", confirm_unsubscribe_path, class: "btn btn-danger" %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script>
  if (document.URL.match(/sign_up/) || document.URL.match(/edit/)) {
  document.addEventListener('DOMContentLoaded', () => {
    const createImageHTML = (blob) => {
      const imageElement = document.getElementById('new-user-image');
      const blobImage = document.createElement('img');
      blobImage.setAttribute('class', 'new-user-img')
      blobImage.setAttribute('src', blob);

      imageElement.appendChild(blobImage);
    };
    document.getElementById('user_profile_image').addEventListener('change', (e) =>{
      const imageContent = document.querySelector('img');
      console.log('change!')
      if (imageContent){
        if (document.URL.match(/edit/)) {
          // 画面上のimgを配列でもってきて先頭を削除
          document.getElementsByTagName('img')[1].remove()
        }else{
          imageContent.remove();
        }
      }

      const file = e.target.files[0];
      const blob = window.URL.createObjectURL(file);
      createImageHTML(blob);
    });
  });
}
</script>